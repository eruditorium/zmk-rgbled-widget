
//                                      █         ██        ▄▀▀▀▀▀▀▀▀▀▀█▀▀▀▀▀▀▀▀█▀▀▀▀▀▀▀▀▀▀█
//                                      █        █ █      ▄▀            ▀▄      █         █
//                                      █       █  █    ▄▀                ▀▄    █        █
//                                      █      █   █   █                    █   █       █
//                                      █     █    █   █                    █   █      █
//                                      █    █     █   █                    █   █  ▀▀▀█▀▀▀▀
//                                      █   █ █    █   █                    █   █    █
//                                      █  █   █   █   █                    █   █   █
//                                      █ █     █  █    ▀▄                ▄▀    █  █
//                                      ██       █ █      ▀▄            ▄▀      █ █
//                                      █         ██▄▄▄▄▄▄▄▄█▄▄▄▄▄▄▄▄▄▄▀        ██▄▄▄▄▄▄▄▄▄▄
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>
#include <behaviors/rgbled_widget.dtsi>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
  require-prior-idle-ms = <200>;
};

&soft_off {
    hold-time-ms = <1500>;
    /delete-property/ split-peripheral-off-on-press;
};

/ {
    macros {
        lights_out: lights_out {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &bl BL_SET 10>
                , <&macro_wait_time 1500>
                , <&macro_press &soft_off>
                , <&macro_pause_for_release>
                , <&macro_release &soft_off>
            ;
        };

        mc_selw: mc_selw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <
                &macro_tap &kp LA(LEFT)
                &macro_tap &kp LA(RIGHT)
                &macro_press &kp LA(LS(LEFT))
                &macro_pause_for_release
                &macro_release &kp LA(LS(LEFT))
                &macro_tap &sl 17
            >;
        };

        mc_seln: mc_seln {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <
                &macro_tap &kp HOME
                &macro_tap &kp HOME
                &macro_press &kp LS(DOWN)
                &macro_pause_for_release
                &macro_release &kp LS(DOWN)
                &macro_tap &sl 17
            >;
        };

        mc_delword: mc_delword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap &kp LA(BACKSPACE)>;
        };

        mc_joinwords: mc_joinwords {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <
                &macro_tap &kp LA(LEFT)
                &macro_tap &kp BACKSPACE
                &macro_tap &kp LA(RIGHT)
            >;
        };

        selectline: selectline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECTLINE";
        };

        selectword: selectword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LS(LC(RIGHT))>;
            label = "SELECTWORD";
        };
    };
};


/ {
    behaviors {
        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LG(LEFT)>, <&kp LS(LG(LEFT))>;
        };
        td3: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LG(RIGHT)>, <&kp LS(LG(RIGHT))>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        shm: shift_hr_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            quick-tap-ms = <0>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
            compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    label= "BASE"                       ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     A     ┃     S     ┃     D     ┃     F     ┃     G     ┃   ┃     H     ┃     J     ┃     K     ┃     L     ┃     ;     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃ NAV/BSPC  ┃     ENTER ┃   ┃    SPC    ┃  SYM/TAB  ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &kp Q       &kp W       &kp E       &kp R        &kp T          &kp Y       &kp U       &kp I       &kp O       &kp P
    &kp A       &kp S       &kp D       &mt LSHFT F  &kp G          &kp H       &mt RSHFT J &kp K       &kp L       &kp SEMI
    &mt LCTRL Z &mt LGUI X  &mt LALT C  &kp V        &kp B          &kp N       &kp M       &mt RALT COMMA   &mt RGUI DOT     &mt RCTRL FSLH
                                        &lt NAV BSPC &lt ADJ RET    &kp SPACE   &lt SYM TAB
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp LC(RIGHT) LC(LEFT)>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


nav_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    label= "NAV"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃    ESC    ┃   HOME    ┃    UP     ┃  PG UP    ┃           ┃   ┃      *    ┃     7     ┃     8     ┃     9     ┃     +     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃    TAB    ┃   LEFT    ┃   DOWN    ┃   RIGHT   ┃           ┃   ┃     /     ┃     4     ┃     5     ┃     6     ┃     -     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃    CTRL   ┃    END    ┃           ┃  PG DWN   ┃           ┃   ┃     0     ┃     1     ┃     2     ┃     3     ┃     =     ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃     ▼     ┃     ▼     ┃   ┃     ▼     ┃     ▼     ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷            ╷            ╷           ╷            ╷           ╷    ╷           ╷           ╷           ╷               ╷              ╷

    &kp ESCAPE   &kp HOME     &kp UP      &kp PG_UP     &none           &kp ASTERISK  &kp KP_N7   &kp KP_N8 &kp KP_N9       &kp PLUS
    &kp TAB      &kp LEFT     &kp DOWN    &kp RIGHT     &none           &kp SLASH   &kp KP_N4   &kp KP_N5   &kp KP_N6       &kp MINUS
    &kp LCTRL    &kp END      &none       &kp PG_DN     &none           &kp KP_N0   &kp KP_N1   &kp KP_N2   &kp KP_N3       &kp EQUAL
                                          &trans        &trans          &trans      &trans
                        >;
            sensor-bindings = <&inc_dec_kp LC(Y) LC(Z) &inc_dec_kp RIGHT LEFT>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                sym_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "SYM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃    !      ┃     @     ┃     #     ┃     $     ┃     %     ┃   ┃     ^     ┃     Ü     ┃     &     ┃     Ö     ┃     °     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     Ä     ┃     ß     ┃           ┃           ┃     ~     ┃   ┃           ┃           ┃           ┃           ┃           ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃           ┃           ┃           ┃           ┃           ┃   ┃     |     ┃     \     ┃     ²     ┃     ³     ┃           ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃     ▼     ┃     ▼     ┃   ┃     ▼     ┃     ▼     ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

   &kp EXCL     &kp AT      &kp HASH     &kp DLLR    &kp PRCNT      &kp CARET   &kp RA(Y)   &kp AMPS    &kp RA(P)   &kp RA(LS(COMMA))
   &kp RA(Q)    &kp RA(S)   &kp RA(F)    &kp RA(G)   &kp TILD       &kp LEFT    &kp UP      &kp DOWN    &kp RIGHT   &none
   &none        &none       &none        &none       &none          &kp PIPE    &kp BSLH    &kp RA(N2)  &kp RA(N3)  &none
                                         &mo ADJ     &trans         &trans      &trans
                        >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp LC(RIGHT) LC(LEFT)>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                adjust_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "ADJ"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃           ┃           ┃           ┃           ┃           ┃   ┃   VOL UP  ┃    F7     ┃    F8     ┃     F9    ┃    F12    ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃           ┃           ┃           ┃           ┃           ┃   ┃  VOL DWN  ┃    F4     ┃    F5     ┃     F6    ┃    F11    ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃           ┃           ┃           ┃           ┃           ┃   ┃    MUTE   ┃    F1     ┃    F2     ┃     F3    ┃    F10    ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃   ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷            ╷          ╷          ╷          ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &none       &none      &none      &none      &none            &kp C_VOL_UP &kp F7      &kp F8      &kp F9      &kp F12
    &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp C_VOL_DN &kp F6    &kp F5      &kp F6      &kp F11
    &none       &none      &none      &none      &none            &kp C_MUTE   &kp F1      &kp F2      &kp F3      &kp F10
                                      &trans     &trans          &trans       &trans
                        >;
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp LC(RIGHT) LC(LEFT)>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

};

/ {
	combos {
        compatible = "zmk,combos";

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <13 14>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <15 16>;
        };

        // {}
        LeftBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3 4>;
        };

        // []
        LeftBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
        };

        // ()
        LeftParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <23 24>;
        };

        // {}
        RightBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <5 6>;
        };

        // []
        RightBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <15 16>;
        };

        // ()
        RightParenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <25 26>;
        };

        // ""
        DoubleQuotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <23 24>;
        };

        // ''
        Quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <25 26>;
        };

        // =
        equal {
            bindings = <&kp EQUAL>;
            key-positions = <18 19>;
        };

        selectline {
            bindings = <&selectline>;
            key-positions = <6 7>;
        };

        selectword {
            bindings = <&selectword>;
            key-positions = <2 3>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };
};
