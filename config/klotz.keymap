
//                                      █         ██        ▄▀▀▀▀▀▀▀▀▀▀█▀▀▀▀▀▀▀▀█▀▀▀▀▀▀▀▀▀▀█
//                                      █        █ █      ▄▀            ▀▄      █         █
//                                      █       █  █    ▄▀                ▀▄    █        █
//                                      █      █   █   █                    █   █       █
//                                      █     █    █   █                    █   █      █
//                                      █    █     █   █                    █   █  ▀▀▀█▀▀▀▀
//                                      █   █ █    █   █                    █   █    █
//                                      █  █   █   █   █                    █   █   █
//                                      █ █     █  █    ▀▄                ▄▀    █  █
//                                      ██       █ █      ▀▄            ▄▀      █ █
//                                      █         ██▄▄▄▄▄▄▄▄█▄▄▄▄▄▄▄▄▄▄▀        ██▄▄▄▄▄▄▄▄▄▄
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


#include <dt-bindings/zmk/behaviors.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>
#include <behaviors/rgbled_widget.dtsi>
#include "zmk-helpers/key-labels/36.h"
#include "zmk-helpers/helper.h"

#define DEF 0
#define NAV 1
#define SYM 2
#define FUN 3

/*                     34 KEY MATRIX

  ╭────────────────────┬────────────────────╮ 
  │  0   1   2   3   4 │  5   6   7   8   9 │ 
  │ 10  11  12  13  14 │ 15  16  17  18  19 │ 
  │ 20  21  22  23  24 │ 25  26  27  28  29 │ 
  ╰───────────╮ 30  31 │ 32  33 ╭───────────╯ 
              ╰────────┴────────╯              */

/* Nav cluster */
// Trigger tap-action on all interrupts.
#define MT_CORE                                                                \
  flavor = "tap-preferred";              z                                      \
  tapping-term-ms = <170>;                                                     \
  quick-tap-ms = <100>;                                                        \
  hold-trigger-key-positions = <0>;

// Mask CTRL on left/right hold to avoid accidental jumps to start/end of doc.
#define MASK_MODS(NAME, MODS, BINDING)                                         \
  ZMK_MOD_MORPH(NAME, bindings = <BINDING>, <BINDING>; mods = <MODS>;);

MASK_MODS(masked_home, (MOD_LCTL), &kp HOME)
MASK_MODS(masked_end,  (MOD_LCTL), &kp END)

ZMK_HOLD_TAP(mt_home, bindings = <&masked_home>, <&kp>; MT_CORE)
ZMK_HOLD_TAP(mt_end, bindings = <&masked_end>, <&kp>; MT_CORE)

#define NAV_LEFT  &mt_home 0   LEFT  // Tap: left  | Long-tap: start of line.
#define NAV_RIGHT &mt_end 0    RIGHT // Tap: right | Long-tap: end   of line.
#define NAV_UP    &mt LC(HOME) UP    // Tap: up    | Long-tap: start of doc.
#define NAV_DOWN  &mt LC(END)  DOWN  // Tap: down  | Long-tap: end   of doc.
#define NAV_BSPC  &mt LC(BSPC) BSPC  // Tap: bspc  | Long-tap: delete word bwd.
#define NAV_DEL   &mt LC(DEL)  DEL   // Tap: del   | Long-tap: delete word fwd

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
        };
        mts: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
            quick-tap-ms = <200>;
        };
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
            display-name = "Layer-Tap";
        };
        phl: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 21 22 23 25 26 27 28 29 30 31>;    
        };
         phr: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 32 33>;    
        };
    };
};


// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


/* Keymap */
/{
       keymap {
            compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    label= "DEF";
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     A     ┃     S     ┃     D     ┃     F     ┃     G     ┃   ┃     H     ┃     J     ┃     K     ┃     L     ┃     ;     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃ NAV/BSPC  ┃ FUN/ENTER ┃   ┃    SPC    ┃  SYM/TAB  ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &kp Q        &kp W       &kp E       &kp R        &kp T          &kp Y       &kp U        &kp I       &kp O       &kp P
    &kp A        &kp S       &kp D       &mts LSHFT F &kp G          &kp H       &mts RSHFT J &kp K       &kp L       &kp SEMI
    &phl LCTRL Z  &phl LGUI X  &phl LALT C  &kp V     &kp B          &kp N       &kp M        &phl RALT COMMA   &phl RGUI DOT     &phl RCTRL FSLH
                                         &lt NAV BSPC &lt FUN RET    &kp SPACE   &lt SYM TAB
                        >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp LC(RIGHT) LC(LEFT)>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


nav_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
    label= "NAV";
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃    ESC    ┃   HOME    ┃    UP     ┃   PG UP   ┃           ┃   ┃     +     ┃     7     ┃     8     ┃     9     ┃     *     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃    TAB    ┃   LEFT    ┃   DOWN    ┃   RIGHT   ┃           ┃   ┃     -     ┃     4     ┃     5     ┃     6     ┃     =     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃   SHIFT   ┃    END    ┃           ┃  PG DWN   ┃           ┃   ┃     .     ┃     1     ┃     2     ┃     3     ┃     /     ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃     ▼     ┃     ▼     ┃   ┃     ▼     ┃     ▼     ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷            ╷          ╷   ╷           ╷           ╷           ╷          ╷           ╷

    &kp ESCAPE   &kp HOME     NAV_UP      &kp PG_UP     NAV_BSPC    &kp PLUS    &kp N7  &kp N8   &kp N9   &kp ASTERISK
    &kp TAB      NAV_LEFT     NAV_DOWN    NAV_RIGHT     NAV_DEL     &kp MINUS   &kp N4  &kp N5   &kp N6   &kp SLASH
    &kp LSHIFT   &kp END      &none       &kp PG_DN     &none       &kp DOT     &kp N1  &kp N2   &kp N3   &kp EQUAL
                                          &trans        &trans      &trans      &kp N0
                        >;
            sensor-bindings = <&inc_dec_kp LC(Y) LC(Z) &inc_dec_kp RIGHT LEFT>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                sym_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "SYM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃    !      ┃     @     ┃     #     ┃     $     ┃     {     ┃   ┃     }     ┃     Ü     ┃     &     ┃     Ö     ┃     °     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃    Ä      ┃     ß     ┃     %     ┃     ~     ┃     [     ┃   ┃     ]     ┃     |     ┃           ┃           ┃           ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃  LSHIFT   ┃     ^     ┃           ┃           ┃     (     ┃   ┃     )     ┃     \     ┃     ²     ┃     ³     ┃           ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃    DEL    ┃     ▼     ┃   ┃     ▼     ┃     ▼     ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

   &kp EXCL     &kp AT      &kp HASH     &kp DLLR    &kp LBRC       &kp RBRC    &kp RA(Y)   &kp AMPS    &kp RA(P)   &kp RA(LS(COMMA))
   &kp RA(Q)    &kp RA(S)   &kp PERCENT  &kp TILD    &kp LBKT       &kp RBKT    &kp PIPE    &none       &none    &none
   &kp LSHFT    &kp CARET   &none        &none       &kp LPAR       &kp RPAR    &kp BSLH    &kp RA(N2)  &kp RA(N3)  &none
                                         &kp DEL     &trans         &trans      &trans
                        >;
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp LC(RIGHT) LC(LEFT)>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


                function_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "FUN"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃           ┃           ┃           ┃           ┃           ┃   ┃   VOL UP  ┃    F7     ┃    F8     ┃     F9    ┃    F12    ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃ BT CLR    ┃  BT SEL 0 ┃ BT SEL 1  ┃ BT SEL 2  ┃ BT SEL 3  ┃   ┃  VOL DWN  ┃    F4     ┃    F5     ┃     F6    ┃    F11    ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃           ┃           ┃           ┃           ┃           ┃   ┃    MUTE   ┃    F1     ┃    F2     ┃     F3    ┃    F10    ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃   ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷            ╷          ╷          ╷          ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷

    &none       &none      &none      &none      &none            &kp C_VOL_UP &kp F7      &kp F8      &kp F9      &kp F12
    &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp C_VOL_DN &kp F6    &kp F5      &kp F6      &kp F11
    &none       &none      &none      &none      &none            &kp C_MUTE   &kp F1      &kp F2      &kp F3      &kp F10
                                      &trans     &trans          &trans       &trans
                        >;
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp LC(RIGHT) LC(LEFT)>;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

};
};

/ {
    macros {
        
        qusp: qusp {
            label = "quote space";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DQT>
                , <&macro_tap &kp SPACE>
                ;
        };
        sqsp: sqsp {
            label = "quote space";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SQT>
                , <&macro_tap &kp SPACE>
                ;
        };

        mc_selw: mc_selw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT)>,
                <&macro_tap>,
                <&kp LA(RIGHT)>,
                <&macro_press>,
                <&kp LA(LS(LEFT))>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LA(LS(LEFT))>,
                <&macro_tap>,
                <&sl 17>;
        };

        mc_seln: mc_seln {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_tap>,
                <&kp HOME>,
                <&macro_tap>,
                <&kp HOME>,
                <&macro_press>,
                <&kp LS(DOWN)>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LS(DOWN)>,
                <&macro_tap>,
                <&sl 17>;
        };

        mc_delword: mc_delword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&macro_tap>, <&kp LA(BACKSPACE)>;
        };

        mc_joinwords: mc_joinwords {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT)>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_tap>,
                <&kp LA(RIGHT)>;
        };

        selectline: selectline {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECTLINE";
        };

        selectword: selectword {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT) &kp LC(LEFT) &kp LS(LC(RIGHT))>;
            label = "SELECTWORD";
        };
    };
};

/*                     34 KEY MATRIX

  ╭────────────────────┬────────────────────╮ 
  │  0   1   2   3   4 │  5   6   7   8   9 │ 
  │ 10  11  12  13  14 │ 15  16  17  18  19 │ 
  │ 20  21  22  23  24 │ 25  26  27  28  29 │ 
  ╰───────────╮ 30  31 │ 32  33 ╭───────────╯ 
              ╰────────┴────────╯              */

/ {
    combos {
        compatible = "zmk,combos";

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <12 13>;
        };

        Underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <16 17>;
        };

        LeftBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3  4>;
        };

        LeftBracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <13 14>;
        };

        LeftParenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <23 24>;
        };

        RightBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <5 6>;
        };

        RightBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <15 16>;
        };

        RightParenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <25 26>;
        };

        DoubleQuotes {
            bindings = <&qusp>;
            key-positions = <22 23>;
        };

        Quote {
            bindings = <&sqsp>;
            key-positions = <26 27>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <27 28>;
        };

        WordBackspace {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <7 8>;
        };

        selectline {
            bindings = <&selectline>;
            key-positions = <2 3>;
        };

        selectword {
            bindings = <&selectword>;
            key-positions = <6 7>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        Del {
            bindings = <&kp DEL>;
            key-positions = <17 18>;
        };

        BkSpc {
            bindings = <&kp BSPC>;
            key-positions = <8  9>;
        };
    };
};
